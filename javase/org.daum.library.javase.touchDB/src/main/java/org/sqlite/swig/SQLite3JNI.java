/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.34
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sqlite.swig;

class SQLite3JNI {
  public final static native int sqlite3_prepare_v1(long jarg1, String jarg2, int jarg3, long jarg4, Object[] jarg5);
  public final static native int sqlite3_prepare_v2(long jarg1, String jarg2, int jarg3, long jarg4, Object[] jarg5);
  public final static native int sqlite3_create_function(long jarg1, Object jarg2);
  public final static native int sqlite3_drop_function(long jarg1, Object jarg2);
  public final static native int sqlite3_create_collation(long jarg1, Object jarg2);
  public final static native int sqlite3_drop_collation(long jarg1, Object jarg2);
  public final static native int sqlite3_set_authorizer(long jarg1, Object jarg2);
  public final static native int sqlite3_clear_authorizer(long jarg1, Object jarg2);
  public final static native int sqlite3_busy_handler(long jarg1, Object jarg2);
  public final static native int sqlite3_clear_busy_handler(long jarg1, Object jarg2);
  public final static native int sqlite3_collation_needed(long jarg1, Object jarg2);
  public final static native int sqlite3_clear_collation_needed(long jarg1, Object jarg2);
  public final static native void sqlite3_progress_handler(long jarg1, Object jarg2);
  public final static native void sqlite3_clear_progress_handler(long jarg1, Object jarg2);
  public final static native void sqlite3_commit_hook(long jarg1, Object jarg2);
  public final static native void sqlite3_clear_commit_hook(long jarg1);
  public final static native void sqlite3_rollback_hook(long jarg1, Object jarg2);
  public final static native void sqlite3_clear_rollback_hook(long jarg1);
  public final static native void sqlite3_update_hook(long jarg1, Object jarg2);
  public final static native void sqlite3_clear_update_hook(long jarg1);
  public final static native void sqlite3_profile(long jarg1, Object jarg2);
  public final static native void sqlite3_clear_profile(long jarg1);
  public final static native void sqlite3_trace(long jarg1, Object jarg2);
  public final static native void sqlite3_clear_trace(long jarg1);
  public final static native void sqlite3_set_auxdata(long jarg1, int jarg2, Object jarg3);
  public final static native Object sqlite3_get_auxdata(long jarg1, int jarg2);
  public final static native byte[] sqlite3_column_blob_by_bytes(long jarg1, int jarg2);
  public final static native byte[] sqlite3_value_blob_by_bytes(long jarg1);
  public final static native void set_sqlite3_temp_directory(String jarg1);
  public final static native int sqlite3_exec(long jarg1, String jarg2, Object jarg3, long jarg4);
  public final static native int sqlite3_get_table(long jarg1, String jarg2, Object jarg3, long jarg4);
  public final static native void delete_callback(Object jarg1);
  public final static native String sqlite3_libversion();
  public final static native int sqlite3_libversion_number();
  public final static native int sqlite3_threadsafe();
  public final static native int sqlite3_close(long jarg1);
  public final static native int sqlite3_extended_result_codes(long jarg1, int jarg2);
  public final static native long sqlite3_last_insert_rowid(long jarg1);
  public final static native int sqlite3_changes(long jarg1);
  public final static native int sqlite3_total_changes(long jarg1);
  public final static native void sqlite3_interrupt(long jarg1);
  public final static native int sqlite3_complete(String jarg1);
  public final static native int sqlite3_busy_timeout(long jarg1, int jarg2);
  public final static native long sqlite3_malloc(int jarg1);
  public final static native long sqlite3_realloc(long jarg1, int jarg2);
  public final static native void sqlite3_free(long jarg1);
  public final static native long sqlite3_memory_used();
  public final static native long sqlite3_memory_highwater(int jarg1);
  public final static native void sqlite3_randomness(int jarg1, long jarg2);
  public final static native int sqlite3_open(String jarg1, long jarg2);
  public final static native int sqlite3_open_v2(String jarg1, long jarg2, int jarg3, String jarg4);
  public final static native int sqlite3_errcode(long jarg1);
  public final static native String sqlite3_errmsg(long jarg1);
  public final static native int sqlite3_limit(long jarg1, int jarg2, int jarg3);
  public final static native String sqlite3_sql(long jarg1);
  public final static native int sqlite3_bind_blob(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5);
  public final static native int sqlite3_bind_double(long jarg1, int jarg2, double jarg3);
  public final static native int sqlite3_bind_int(long jarg1, int jarg2, int jarg3);
  public final static native int sqlite3_bind_int64(long jarg1, int jarg2, long jarg3);
  public final static native int sqlite3_bind_null(long jarg1, int jarg2);
  public final static native int sqlite3_bind_text(long jarg1, int jarg2, String jarg3, int jarg4, long jarg5);
  public final static native int sqlite3_bind_value(long jarg1, int jarg2, long jarg3);
  public final static native int sqlite3_bind_zeroblob(long jarg1, int jarg2, int jarg3);
  public final static native int sqlite3_bind_parameter_count(long jarg1);
  public final static native String sqlite3_bind_parameter_name(long jarg1, int jarg2);
  public final static native int sqlite3_bind_parameter_index(long jarg1, String jarg2);
  public final static native int sqlite3_clear_bindings(long jarg1);
  public final static native int sqlite3_column_count(long jarg1);
  public final static native String sqlite3_column_name(long jarg1, int jarg2);
  public final static native String sqlite3_column_database_name(long jarg1, int jarg2);
  public final static native String sqlite3_column_table_name(long jarg1, int jarg2);
  public final static native String sqlite3_column_origin_name(long jarg1, int jarg2);
  public final static native String sqlite3_column_decltype(long jarg1, int jarg2);
  public final static native int sqlite3_step(long jarg1);
  public final static native int sqlite3_data_count(long jarg1);
  public final static native long sqlite3_column_blob(long jarg1, int jarg2);
  public final static native int sqlite3_column_bytes(long jarg1, int jarg2);
  public final static native int sqlite3_column_bytes16(long jarg1, int jarg2);
  public final static native double sqlite3_column_double(long jarg1, int jarg2);
  public final static native int sqlite3_column_int(long jarg1, int jarg2);
  public final static native long sqlite3_column_int64(long jarg1, int jarg2);
  public final static native String sqlite3_column_text(long jarg1, int jarg2);
  public final static native int sqlite3_column_type(long jarg1, int jarg2);
  public final static native long sqlite3_column_value(long jarg1, int jarg2);
  public final static native int sqlite3_finalize(long jarg1);
  public final static native int sqlite3_reset(long jarg1);
  public final static native long sqlite3_value_blob(long jarg1);
  public final static native int sqlite3_value_bytes(long jarg1);
  public final static native double sqlite3_value_double(long jarg1);
  public final static native int sqlite3_value_int(long jarg1);
  public final static native long sqlite3_value_int64(long jarg1);
  public final static native String sqlite3_value_text(long jarg1);
  public final static native int sqlite3_value_type(long jarg1);
  public final static native int sqlite3_value_numeric_type(long jarg1);
  public final static native long sqlite3_context_db_handle(long jarg1);
  public final static native void sqlite3_result_blob(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void sqlite3_result_double(long jarg1, double jarg2);
  public final static native void sqlite3_result_error(long jarg1, String jarg2, int jarg3);
  public final static native void sqlite3_result_error_toobig(long jarg1);
  public final static native void sqlite3_result_error_nomem(long jarg1);
  public final static native void sqlite3_result_error_code(long jarg1, int jarg2);
  public final static native void sqlite3_result_int(long jarg1, int jarg2);
  public final static native void sqlite3_result_int64(long jarg1, long jarg2);
  public final static native void sqlite3_result_null(long jarg1);
  public final static native void sqlite3_result_text(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native void sqlite3_result_value(long jarg1, long jarg2);
  public final static native void sqlite3_result_zeroblob(long jarg1, int jarg2);
  public final static native int sqlite3_sleep(int jarg1);
  public final static native int sqlite3_get_autocommit(long jarg1);
  public final static native long sqlite3_db_handle(long jarg1);
  public final static native long sqlite3_next_stmt(long jarg1, long jarg2);
  public final static native int sqlite3_enable_shared_cache(int jarg1);
  public final static native int sqlite3_table_column_metadata(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int sqlite3_load_extension(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int sqlite3_enable_load_extension(long jarg1, int jarg2);
  public final static native int sqlite3_auto_extension(long jarg1);
  public final static native void sqlite3_reset_auto_extension();
  public final static native int sqlite3_blob_open(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5, int jarg6, long jarg7);
  public final static native int sqlite3_blob_close(long jarg1);
  public final static native int sqlite3_blob_bytes(long jarg1);
  public final static native long sqlite3_vfs_find(String jarg1);
  public final static native int sqlite3_vfs_register(long jarg1, int jarg2);
  public final static native int sqlite3_vfs_unregister(long jarg1);
  public final static native long sqlite3_mutex_alloc(int jarg1);
  public final static native void sqlite3_mutex_free(long jarg1);
  public final static native void sqlite3_mutex_enter(long jarg1);
  public final static native int sqlite3_mutex_try(long jarg1);
  public final static native void sqlite3_mutex_leave(long jarg1);
  public final static native int sqlite3_file_control(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int sqlite3_status(int jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int sqlite3_db_status(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5);
  public final static native int sqlite3_stmt_status(long jarg1, int jarg2, int jarg3);
  public final static native long new_p_p_sqlite3();
  public final static native void delete_p_p_sqlite3(long jarg1);
  public final static native long get_p_sqlite3(long jarg1);
  public final static native long new_p_p_sqlite3_stmt();
  public final static native void delete_p_p_sqlite3_stmt(long jarg1);
  public final static native long get_p_sqlite3_stmt(long jarg1);
  public final static native long new_p_p_char();
  public final static native void delete_p_p_char(long jarg1);
  public final static native String get_p_char(long jarg1);
  public final static native long new_p_int();
  public final static native void delete_p_int(long jarg1);
  public final static native int get_int(long jarg1);
  public final static native long new_p_p_sqlite3_blob();
  public final static native void delete_p_p_sqlite3_blob(long jarg1);
  public final static native long get_p_sqlite3_blob(long jarg1);
  public final static native int sqlite3_bind_blob_by_bytes(long jarg1, int jarg2, byte[] jarg3, int jarg4, long jarg5);
  public final static native void read_blob(long jarg1, long jarg2, byte[] jarg3, int jarg4, int jarg5);
  public final static native long get_p_sqlite3_value(long jarg1, int jarg2);
  public final static native void sqlite3_result_blob_by_bytes(long jarg1, byte[] jarg2, int jarg3, long jarg4);
  public final static native String sqlite3_get_errmsg(int jarg1);
  public final static native int sqlite3_blob_read(long jarg1, byte[] jarg2, int jarg3, int jarg4);
  public final static native int sqlite3_blob_write(long jarg1, byte[] jarg2, int jarg3, int jarg4);
}
